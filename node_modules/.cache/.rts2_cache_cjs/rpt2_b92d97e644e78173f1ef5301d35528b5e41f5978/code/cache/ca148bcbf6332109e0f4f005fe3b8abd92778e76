{"code":"import fetch from \"isomorphic-unfetch\";\nexport class Base {\n    apiKey;\n    baseUrl;\n    constructor(config) {\n        this.apiKey = config.apiKey;\n        this.baseUrl = config.baseUrl || \"https://jsonplaceholder.typicode.com\";\n    }\n    async request(endpoint, options) {\n        const url = `${this.baseUrl}${endpoint}`;\n        const headers = {\n            \"Content-Type\": \"application/json\",\n            \"api-key\": this.apiKey,\n        };\n        const config = Object.assign({}, options, { headers });\n        const response = await fetch(url, config);\n        if (response.ok) {\n            const data = await response.json();\n            return data;\n        }\n        throw new Error(response.statusText);\n    }\n}\n","references":["/Users/manmeetsingh/supreet/typescript-sdk-demo/sdk/node_modules/isomorphic-unfetch/index.d.ts"],"dts":{"name":"/Users/manmeetsingh/supreet/typescript-sdk-demo/sdk/dist/base.d.ts","writeByteOrderMark":false,"text":"type Config = {\n    apiKey: string;\n    baseUrl?: string;\n};\nexport declare abstract class Base {\n    private apiKey;\n    private baseUrl;\n    constructor(config: Config);\n    protected request<T>(endpoint: string, options?: RequestInit): Promise<T>;\n}\nexport {};\n"}}
